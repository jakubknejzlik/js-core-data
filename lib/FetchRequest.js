// Generated by CoffeeScript 1.6.3
(function() {
  var FetchRequest, PersistentStoreRequest,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  PersistentStoreRequest = require('./stores/PersistentStoreRequest');

  FetchRequest = (function(_super) {
    __extends(FetchRequest, _super);

    function FetchRequest(entity, predicate, sortDescriptors) {
      this.entity = entity;
      this.predicate = predicate;
      this.sortDescriptors = sortDescriptors != null ? sortDescriptors : [];
      FetchRequest.__super__.constructor.call(this, 'fetch');
      this._limit = 0;
      this._offset = 0;
    }

    FetchRequest.prototype.setLimit = function(value) {
      this._limit = value;
      return this;
    };

    FetchRequest.prototype.getLimit = function() {
      return this._limit;
    };

    FetchRequest.prototype.setOffset = function(value) {
      this._offset = value;
      return this;
    };

    FetchRequest.prototype.getOffset = function() {
      return this._offset;
    };

    return FetchRequest;

  })(PersistentStoreRequest);

  module.exports = FetchRequest;

}).call(this);
