// Generated by CoffeeScript 1.10.0
(function() {
  var EntityDescription, FetchRequest, PersistentStoreRequest, assert,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  assert = require('assert');

  PersistentStoreRequest = require('./stores/PersistentStoreRequest');

  EntityDescription = require('./Descriptors/EntityDescription');

  FetchRequest = (function(superClass) {
    extend(FetchRequest, superClass);

    function FetchRequest(entity, predicate, sortDescriptors) {
      this.entity = entity;
      this.predicate = predicate;
      this.sortDescriptors = sortDescriptors != null ? sortDescriptors : [];
      FetchRequest.__super__.constructor.call(this, 'fetch');
      assert(this.entity instanceof EntityDescription, 'entity must be instance of EntityDescription');
      this.limit = 0;
      this.offset = 0;
      this.resultType = FetchRequest.RESULT_TYPE.MANAGED_OBJECTS;
      this.fields = null;
      this.havingPredicate = null;
      this.groupBy = null;
    }

    FetchRequest.prototype.setLimit = function(value) {
      this.limit = value;
      return this;
    };

    FetchRequest.prototype.getLimit = function() {
      return this.limit;
    };

    FetchRequest.prototype.setOffset = function(value) {
      this.offset = value;
      return this;
    };

    FetchRequest.prototype.getOffset = function() {
      return this.offset;
    };

    FetchRequest.RESULT_TYPE = {
      MANAGED_OBJECTS: 1,
      VALUES: 2
    };

    return FetchRequest;

  })(PersistentStoreRequest);

  module.exports = FetchRequest;

}).call(this);
