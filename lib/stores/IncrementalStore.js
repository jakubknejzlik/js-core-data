// Generated by CoffeeScript 1.6.3
(function() {
  var IncrementalStore, IncrementalStoreNode, PersistentStore, PersistentStoreRequest, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  PersistentStore = require('./PersistentStore');

  PersistentStoreRequest = require('./PersistentStoreRequest');

  IncrementalStoreNode = require('./IncrementalStoreNode');

  IncrementalStore = (function(_super) {
    __extends(IncrementalStore, _super);

    function IncrementalStore() {
      _ref = IncrementalStore.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    IncrementalStore.getType = function() {
      return 'IncrementalStore';
    };

    IncrementalStore.prototype.execute = function(request, context, callback) {
      if (!(request instanceof PersistentStoreRequest)) {
        throw new Error('request ' + request + ' is not instance of PersistentStoreRequest');
      }
      throw new Error('execute method not implemented');
    };

    IncrementalStore.prototype.valuesForObject = function(ObjectID, context) {
      throw new Error('valuesForObjet method not implemented');
    };

    IncrementalStore.prototype.valueForRelationship = function(relationship, ObjectID, context, callback) {
      throw new Error('valuesForObjet method not implemented');
    };

    IncrementalStore.prototype.permanentIDsForObjects = function(objects, callback) {
      throw new Error('permanentIDsForObjects method not implemented');
    };

    IncrementalStore.prototype.newObjectID = function(entity, referenceObject) {};

    return IncrementalStore;

  })(PersistentStore);

  module.exports = IncrementalStore;

}).call(this);
