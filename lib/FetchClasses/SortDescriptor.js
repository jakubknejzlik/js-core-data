// Generated by CoffeeScript 1.9.3
(function() {
  var SortDescriptor,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  SortDescriptor = (function(superClass) {
    extend(SortDescriptor, superClass);

    function SortDescriptor(attribute, ascending) {
      this.attribute = attribute;
      if (ascending == null) {
        ascending = true;
      }
      if (typeof ascending === 'string') {
        ascending = ascending.toLowerCase() === 'ASC';
      }
      this.ascending = !!ascending;
    }

    SortDescriptor.prototype.toString = function() {
      return this.attribute + ' ' + (this.ascending ? 'ASC' : 'DESC');
    };

    return SortDescriptor;

  })(Object);

  module.exports = SortDescriptor;

}).call(this);
