// Generated by CoffeeScript 1.10.0
(function() {
  var DATE_FORMAT, ManagedObject, ManagedObjectID, Predicate, moment, util,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  util = require('util');

  ManagedObject = require('./../ManagedObject');

  ManagedObjectID = require('./../ManagedObjectID');

  moment = require('moment');

  DATE_FORMAT = 'YYYY-MM-DD HH:mm:ss';

  Predicate = (function(superClass) {
    extend(Predicate, superClass);

    function Predicate() {
      var format1, variables;
      format1 = arguments[0], variables = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      this.format = format1;
      this.variables = variables;
    }

    Predicate.prototype.isObjectIDPredicate = function() {
      return this.format instanceof ManagedObjectID;
    };

    Predicate.prototype.objectID = function() {
      return this.format;
    };

    Predicate.prototype.toString = function() {
      var args, format, i, len, ref, variable;
      if (this.format instanceof ManagedObjectID) {
        return '_id = ' + this.format.recordId();
      } else {
        format = this.format.replace(/[\s]*=[\s]*%@/g, '_id = %d').replace(/%s/g, '\'%s\'').replace(/%a/g, '%s');
        args = [format];
        ref = this.variables;
        for (i = 0, len = ref.length; i < len; i++) {
          variable = ref[i];
          if (variable === void 0 || variable === null) {
            variable = null;
          } else if (util.isArray(variable)) {
            variable = JSON.stringify(variable).replace(/\[/g, '(').replace(/\]/g, ')');
          } else if (variable instanceof Date) {
            variable = moment(variable).format(DATE_FORMAT);
          } else if (variable instanceof ManagedObject) {
            variable = variable.objectID.recordId();
          } else if (variable instanceof ManagedObjectID) {
            variable = variable.recordId();
          } else if (variable._isAMomentObject) {
            variable = variable.format(DATE_FORMAT);
          }
          args.push(variable);
        }
        return util.format.apply(util.format, args);
      }
    };

    return Predicate;

  })(Object);

  module.exports = Predicate;

}).call(this);
