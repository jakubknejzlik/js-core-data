// Generated by CoffeeScript 1.6.3
(function() {
  var ManagedObjectID, Predicate, util,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  util = require('util');

  ManagedObjectID = require('./../ManagedObjectID');

  Predicate = (function(_super) {
    __extends(Predicate, _super);

    function Predicate() {
      var format, variables;
      format = arguments[0], variables = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      this.format = format;
      this.variables = variables;
    }

    Predicate.prototype.isObjectIDPredicate = function() {
      return this.format instanceof ManagedObjectID;
    };

    Predicate.prototype.objectID = function() {
      return this.format;
    };

    Predicate.prototype.toString = function() {
      var args, variable, _i, _len, _ref;
      if (this.format instanceof ManagedObjectID) {
        return '`_id` = ' + this.format.recordId();
      } else {
        args = [this.format.replace(/%s/g, '\'%s\'')];
        _ref = this.variables;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          variable = _ref[_i];
          args.push(variable);
        }
        return util.format.apply(util.format, args);
      }
    };

    return Predicate;

  })(Object);

  module.exports = Predicate;

}).call(this);
